{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","clear","setState","removeGood","good","filter","product","addGood","createGoodsList","leng","length","slice","join","isIncluded","includes","this","className","type","onClick","map","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,MAAQ,WACN,EAAKC,SAAS,CAAEF,cAAe,M,EAGjCG,WAAa,SAACC,GACZ,EAAKF,UAAS,SAACH,GAAD,MAAY,CACxBC,cAAeD,EAAMC,cAAcK,QAAO,SAACC,GAAD,OAAaA,IAAYF,U,EAIvEG,QAAU,SAACH,GACT,EAAKF,UAAS,SAACH,GAAD,MAAY,CAAEC,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BI,S,EAGtEI,gBAAkB,WAChB,IAAQR,EAAkB,EAAKD,MAAvBC,cAEFS,EAAOT,EAAcU,OAE3B,OAAa,IAATD,EACK,oBAGI,IAATA,EACI,GAAN,OAAUT,EAAc,GAAxB,gBAGI,GAAN,OAAUA,EAAcW,MAAM,GAAI,GAAGC,KAAK,MAA1C,gBAAuDZ,EAAcS,EAAO,GAA5E,kB,EAGFI,WAAa,SAACT,GAGZ,OAF0B,EAAKL,MAAvBC,cAEac,SAASV,I,4CAGhC,WAAU,IAAD,OACCJ,EAAkBe,KAAKhB,MAAvBC,cAER,OACE,sBAAKgB,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,SACGD,KAAKP,oBAER,sBAAKQ,UAAU,YAAf,mCACqBhB,EAAcU,QAChCV,EAAcU,OAAS,GACtB,wBACEM,UAAU,uBACVC,KAAK,SACLC,QAAS,kBAAM,EAAKjB,SAHtB,kBASJ,oBAAIe,UAAU,iBAAd,SACGnB,EAAgBsB,KAAI,SAAAf,GAAI,OACvB,qBACEY,UAAS,qBAAgB,EAAKH,WAAWT,IAAS,sBADpD,UAIGA,EACC,EAAKS,WAAWT,GAUd,wBACEY,UAAU,qCACVC,KAAK,SACLC,QAAS,kBAAM,EAAKf,WAAWC,IAHjC,oBARA,wBACEY,UAAU,kCACVC,KAAK,SACLC,QAAS,kBAAM,EAAKX,QAAQH,IAH9B,sBALCA,e,GAjEDgB,IAAMC,WA8FTvB,IC/GfwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.085d8420.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  clear = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  removeGood = (good: string) => {\n    this.setState((state) => ({\n      selectedGoods: state.selectedGoods.filter((product) => product !== good),\n    }));\n  };\n\n  addGood = (good: string) => {\n    this.setState((state) => ({ selectedGoods: [...state.selectedGoods, good] }));\n  };\n\n  createGoodsList = () => {\n    const { selectedGoods } = this.state;\n\n    const leng = selectedGoods.length;\n\n    if (leng === 0) {\n      return 'No goods selected';\n    }\n\n    if (leng === 1) {\n      return `${selectedGoods[0]} is selected`;\n    }\n\n    return `${selectedGoods.slice(0, -1).join(', ')} and ${selectedGoods[leng - 1]} are selected`;\n  };\n\n  isIncluded = (good: string) => {\n    const { selectedGoods } = this.state;\n\n    return selectedGoods.includes(good);\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1 className=\"app__title\">\n          {this.createGoodsList()}\n        </h1>\n        <div className=\"container\">\n          {`Goods in list: ${selectedGoods.length}`}\n          {selectedGoods.length > 0 && (\n            <button\n              className=\"button button--clear\"\n              type=\"button\"\n              onClick={() => this.clear()}\n            >\n              X\n            </button>\n          )}\n        </div>\n        <ul className=\"app__list list\">\n          {goodsFromServer.map(good => (\n            <li\n              className={`list__item ${this.isIncluded(good) && 'list__item--active'}`}\n              key={good}\n            >\n              {good}\n              {!this.isIncluded(good)\n                ? (\n                  <button\n                    className=\"list__button button button--add\"\n                    type=\"button\"\n                    onClick={() => this.addGood(good)}\n                  >\n                    Select\n                  </button>\n                ) : (\n                  <button\n                    className=\"list__button button button--remove\"\n                    type=\"button\"\n                    onClick={() => this.removeGood(good)}\n                  >\n                    Remove\n                  </button>\n                )}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}