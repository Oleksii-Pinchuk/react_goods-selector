{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","this","setState","good","filter","product","leng","length","slice","join","includes","className","createGoodsList","type","onClick","clear","map","isIncluded","removeGood","addGood","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,2CAGlB,WACEC,KAAKC,SAAS,CAAEF,cAAe,O,wBAGjC,SAAWG,GACTF,KAAKC,UAAS,SAACH,GAAD,MAAY,CACxBC,cAAeD,EAAMC,cAAcI,QAAO,SAACC,GAAD,OAAaA,IAAYF,W,qBAIvE,SAAQA,GACNF,KAAKC,UAAS,SAACH,GAAD,MAAY,CAAEC,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BG,U,6BAGtE,WACE,IAAQH,EAAkBC,KAAKF,MAAvBC,cAEFM,EAAON,EAAcO,OAE3B,OAAa,IAATD,EACK,oBAGI,IAATA,EACI,GAAN,OAAUN,EAAc,GAAxB,gBAGI,GAAN,OAAUA,EAAcQ,MAAM,GAAI,GAAGC,KAAK,MAA1C,gBAAuDT,EAAcM,EAAO,GAA5E,mB,wBAGF,SAAWH,GAGT,OAF0BF,KAAKF,MAAvBC,cAEaU,SAASP,K,oBAGhC,WAAU,IAAD,OACCH,EAAkBC,KAAKF,MAAvBC,cAER,OACE,sBAAKW,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,SACGV,KAAKW,oBAER,sBAAKD,UAAU,YAAf,mCACqBV,KAAKF,MAAMC,cAAcO,QAC3CP,EAAcO,OAAS,GACtB,wBACEI,UAAU,uBACVE,KAAK,SACLC,QAAS,kBAAM,EAAKC,SAHtB,kBASJ,oBAAIJ,UAAU,iBAAd,SACGd,EAAgBmB,KAAI,SAAAb,GAAI,OACvB,qBACEQ,UAAU,aADZ,UAIGR,EACC,EAAKc,WAAWd,GAYd,wBACEQ,UAAU,qCACVE,KAAK,SACLC,QAAS,WACP,EAAKI,WAAWf,IAJpB,oBAVA,wBACEQ,UAAU,kCACVE,KAAK,SACLC,QAAS,WACP,EAAKK,QAAQhB,IAJjB,sBALCA,e,GAjEDiB,IAAMC,WAkGTvB,ICnHfwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1373d7e6.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  clear() {\n    this.setState({ selectedGoods: [] });\n  }\n\n  removeGood(good: string) {\n    this.setState((state) => ({\n      selectedGoods: state.selectedGoods.filter((product) => product !== good),\n    }));\n  }\n\n  addGood(good: string) {\n    this.setState((state) => ({ selectedGoods: [...state.selectedGoods, good] }));\n  }\n\n  createGoodsList() {\n    const { selectedGoods } = this.state;\n\n    const leng = selectedGoods.length;\n\n    if (leng === 0) {\n      return 'No goods selected';\n    }\n\n    if (leng === 1) {\n      return `${selectedGoods[0]} is selected`;\n    }\n\n    return `${selectedGoods.slice(0, -1).join(', ')} and ${selectedGoods[leng - 1]} are selected`;\n  }\n\n  isIncluded(good: string) {\n    const { selectedGoods } = this.state;\n\n    return selectedGoods.includes(good);\n  }\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1 className=\"app__title\">\n          {this.createGoodsList()}\n        </h1>\n        <div className=\"container\">\n          {`Goods in list: ${this.state.selectedGoods.length}`}\n          {selectedGoods.length > 0 && (\n            <button\n              className=\"button button--clear\"\n              type=\"button\"\n              onClick={() => this.clear()}\n            >\n              X\n            </button>\n          )}\n        </div>\n        <ul className=\"app__list list\">\n          {goodsFromServer.map(good => (\n            <li\n              className=\"list__item\"\n              key={good}\n            >\n              {good}\n              {!this.isIncluded(good)\n                ? (\n                  <button\n                    className=\"list__button button button--add\"\n                    type=\"button\"\n                    onClick={() => {\n                      this.addGood(good);\n                    }}\n                  >\n                    Select\n                  </button>\n                ) : (\n                  <button\n                    className=\"list__button button button--remove\"\n                    type=\"button\"\n                    onClick={() => {\n                      this.removeGood(good);\n                    }}\n                  >\n                    Remove\n                  </button>\n                )}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}